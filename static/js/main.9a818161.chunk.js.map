{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Button/Button.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/GetImages/GetImages.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/Loader/Loader.js","App.js","reportWebVitals.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","search","onChange","target","setState","value","onSubmit","event","preventDefault","props","onSubmitHandler","className","s","SearchForm","this","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","onOpen","src","largeimageurl","alt","ImageGalleryItem_image","onClick","ImageGallery","searchResult","map","axios","defaults","baseURL","params","key","image_type","orientation","per_page","GetImages","a","q","page","get","data","hits","console","log","error","propType","PropTypes","string","isRequired","number","Button","ButtonName","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","onOverlayClick","currentTarget","window","addEventListener","removeEventListener","createPortal","Overlay","onModalImage","Spinner","loader","color","height","width","timeout","App","images","searchQuery","modalSrc","isloading","loadMore","getNextPageImages","prevState","scrollPage","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","newImages","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a818161.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3bSYr\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__fnbAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__24smZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2zdAy\",\"Modal\":\"Modal_Modal__CKTgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1gb_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__oJ4ZB\"};","import { Component } from 'react';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    search: '',\n  };\n\n  onChange = ({ target }) => {\n    this.setState({ search: target.value });\n  };\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmitHandler(this.state.search);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.onSubmit}>\n          <button type=\"submit\" className={s.SearchForm_button}>\n            <span className={s.SearchForm_button_label}>Search</span>\n          </button>\n\n          <input\n            onChange={this.onChange}\n            className={s.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.search}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  id,\n  webformatURL,\n  largeImageURL,\n  tags,\n  onOpen,\n}) => {\n  return (\n    <li key={id} className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        largeimageurl={largeImageURL}\n        alt={tags}\n        className={s.ImageGalleryItem_image}\n        onClick={() => onOpen(largeImageURL)}\n      />\n    </li>\n  );\n};\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onOpen: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ searchResult, onOpen }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {searchResult.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          id={id}\n          tags={tags}\n          onOpen={onOpen}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  searchResult: PropTypes.array.isRequired,\n  onOpen: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '19626166-06d2415af44c148da2cace63b';\nconst BASE_URL = `https://pixabay.com/api/`;\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\n\nconst GetImages = async ({ q, page }) => {\n  try {\n    const { data } = await axios.get('', {\n      params: { q, page },\n    });\n    return data.hits;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default GetImages;\n\nGetImages.propType = {\n  q: PropTypes.string.isRequired,\n  page: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"submit\" onClick={onClick} className={s.Button}>\n      <span className={s.ButtonName}> Load more</span>\n    </button>\n  );\n};\nexport default Button;\n\nButton.propTypes = { onClick: PropTypes.func.isRequired };\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ code }) => {\n    if (code === 'Escape') this.props.onCloseModal();\n  };\n  onOverlayClick = event => {\n    if (event.currentTarget === event.target) this.props.onCloseModal();\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.onOverlayClick}>\n        <div className={s.Modal}>\n          <img\n            src={this.props.largeImageURL}\n            onClick={this.props.onModalImage}\n            alt=\"\"\n          />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport s from './Loader.module.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class Spinner extends Component {\n  //other logic\n  render() {\n    return (\n      <div className={s.loader}>\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport GetImages from './Components/GetImages/GetImages';\nimport Button from './Components/Button/Button';\nimport Modal from './Components/Modal/Modal';\nimport Spinner from './Components/Loader/Loader';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    modalSrc: '',\n    isloading: false,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    try {\n      const { page, searchQuery } = this.state;\n      if (searchQuery !== prevState.searchQuery) {\n        this.setState({ images: [], page: 1 });\n        this.setState({ isloading: true });\n        const newImages = await GetImages({ q: searchQuery, page });\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...newImages],\n          page: prevState.page + 1,\n        }));\n        this.setState({ isloading: false });\n      }\n    } catch (error) {\n      console.log('Error => ', error);\n      return [];\n    }\n    this.scrollPage();\n  }\n\n  onSubmitHandler = search => {\n    this.setState({ searchQuery: search });\n  };\n\n  loadMore = async () => {\n    try {\n      this.setState({ isloading: true });\n      const { searchQuery, page } = this.state;\n      const getNextPageImages = await GetImages({ q: searchQuery, page });\n      this.setState(prevState => ({\n        images: [...prevState.images, ...getNextPageImages],\n        page: prevState.page + 1,\n      }));\n    } catch (error) {\n      console.log('Error => ', error);\n      return [];\n    } finally {\n      this.setState({ isloading: false });\n    }\n  };\n\n  scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onModalImage = modalSrc => {\n    this.setState({ modalSrc });\n  };\n\n  onCloseModal = () => {\n    this.setState({ modalSrc: '' });\n  };\n\n  render() {\n    const { images, modalSrc, isloading } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmitHandler={this.onSubmitHandler} />\n\n        {images && (\n          <ImageGallery\n            searchResult={this.state.images}\n            onOpen={this.onModalImage}\n          />\n        )}\n        {isloading && <Spinner />}\n        {images.length > 0 && !isloading && <Button onClick={this.loadMore} />}\n        {modalSrc && (\n          <Modal\n            largeImageURL={modalSrc}\n            onCloseModal={this.onCloseModal}\n            onClick={this.props.onOverlayClick}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2OKTu\",\"SearchForm\":\"Searchbar_SearchForm__3FrTM\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2cb6I\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3Vfhu\",\"SearchForm_input\":\"Searchbar_SearchForm_input__T1PcT\"};"],"sourceRoot":""}